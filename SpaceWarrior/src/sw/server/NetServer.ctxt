#BlueJ class context
comment0.params=port
comment0.target=NetServer(int)
comment0.text=\r\n\ Initialisiert\ den\ NetServer\r\n\ \r\n\ @param\ port\ Der\ Port\r\n
comment1.params=ip\ port
comment1.target=Client\ sucheClient(java.lang.String,\ int)
comment1.text=\r\n\ Der\ gesuchte\ Client\ wird\ zur\u00FCckgegeben\r\n\ \r\n\ @param\ ip\ Ip\ des\ Clients,\ welcher\ gesucht\ werden\ soll\r\n\ @param\ port\ Port\ des\ Clients,\ welcher\ gesucht\ werden\ soll\r\n\ @return\ der\ gesuchte\ Client\ oder\ null,\ wenn\ dieser\ nicht\ vorhanden\ ist\r\n
comment10.params=pClientIP\ pPartnerPort\ pNachricht
comment10.target=void\ bearbeiteNachricht(java.lang.String,\ int,\ java.lang.String)
comment11.params=
comment11.target=void\ tick()
comment11.text=\r\n\ Bearbeitet\ das\ Leerlauf-Ereignis\r\n
comment12.params=name
comment12.target=void\ setzeServerName(java.lang.String)
comment12.text=\r\n\ Setzt\ den\ Name\ des\ Servers\r\n\r\n\ @param\ name\ neuer\ Server\ Name\r\n
comment13.params=
comment13.target=sw.shared.Paket\ holeServerInfos()
comment13.text=\r\n\ Gibt\ ein\ Paket\ mit\ den\ Serverinfos\ zurueck\r\n\r\n\ @return\ Paket\ mit\ Serverinfos\r\n
comment14.params=
comment14.target=sum.strukturen.Liste\ clListe()
comment2.params=name
comment2.target=Client\ sucheClient(java.lang.String)
comment2.text=\r\n\ Der\ gesuchte\ Client\ wird\ zur\u00FCckgegeben\r\n\ \r\n\ @param\ name\ Name\ des\ Clients,\ welcher\ gesucht\ werden\ soll\r\n\ @return\ der\ gesuchte\ Client\ oder\ null,\ wenn\ dieser\ nicht\ vorhanden\ ist\r\n
comment3.params=ip\ port
comment3.target=void\ entferneClient(java.lang.String,\ int)
comment3.text=\r\n\ Entfernt\ einen\ Client\r\n\ \r\n\ @param\ ip\ Ip\ des\ Clients,\ welcher\ entfernt\ werden\ soll\r\n\ @param\ port\ Port\ des\ Clients,\ welcher\ entfernt\ werden\ soll\r\n
comment4.params=ip\ port\ nachricht
comment4.target=void\ sendeNachricht(java.lang.String,\ int,\ sw.shared.Paket)
comment4.text=\r\n\ Sendet\ eine\ Nachricht\ an\ einen\ Client\r\n\ \r\n\ @param\ ip\ Ip\ des\ Empf\u00E4ngers\r\n\ @param\ port\ Port\ des\ Empf\u00E4ngers\r\n\ @param\ nachricht\ Die\ Nachricht\r\n
comment5.params=name\ nachricht
comment5.target=void\ sendeNachricht(java.lang.String,\ sw.shared.Paket)
comment5.text=\r\n\ Sendet\ eine\ Nachricht\ an\ einen\ Client\r\n\ \r\n\ @param\ name\ Name\ des\ Empf\u00E4ngers\r\n\ @param\ nachricht\ Die\ Nachricht\r\n
comment6.params=nachricht
comment6.target=void\ sendeRundnachricht(sw.shared.Paket)
comment6.text=\r\n\ Sendet\ eine\ Nachricht\ an\ alle\ verbundenen\ Clients\r\n\ \r\n\ @param\ nachricht\ Die\ Nachricht\r\n
comment7.params=pClientIP\ pPartnerPort
comment7.target=void\ bearbeiteVerbindungsaufbau(java.lang.String,\ int)
comment8.params=pClientIP\ pPartnerPort
comment8.target=void\ bearbeiteVerbindungsende(java.lang.String,\ int)
comment9.params=pClientIP\ pPartnerPort
comment9.target=void\ bearbeiteVerbindungsverlust(java.lang.String,\ int)
numComments=15
